apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: test-kubeflow-pipeline-registry
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.10, pipelines.kubeflow.org/pipeline_compilation_time: '2022-09-24T16:47:23.603487',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Pipeline to test an example
      component (Registry)", "name": "Test Kubeflow pipeline (Registry)"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.10}
spec:
  entrypoint: test-kubeflow-pipeline-registry
  templates:
  - name: kfp-example
    container:
      args: []
      command: [python, train.py]
      image: ${HOST_IP}:5001/kfp-registry-test-image:reg-test-kfp
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.10
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Example
          component using MLflow", "implementation": {"container": {"args": [], "command":
          ["python", "train.py"], "image": "${HOST_IP}:5001/kfp-registry-test-image:reg-test-kfp"}}, "inputs": [],
          "name": "KFP example", "outputs": []}', pipelines.kubeflow.org/component_ref: '{"digest":
          "8c96d2df65ae29c70b3c82f839474c9399c5c18acaeba7898081d82262862cff", "url":
          "component.yaml"}'}
  - name: test-kubeflow-pipeline-registry
    dag:
      tasks:
      - {name: kfp-example, template: kfp-example}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
